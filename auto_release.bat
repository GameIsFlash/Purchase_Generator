@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

echo.
echo ========================================
echo    –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –†–ï–õ–ò–ó PACKAGEGENERATOR
echo ========================================
echo.

REM --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
set REPO_PATH=%~dp0
set GITHUB_USER=GameIsFlash
set GITHUB_REPO=Purchase_Generator

REM --- –ü–ï–†–ï–•–û–î –í –ü–ê–ü–ö–£ –ü–†–û–ï–ö–¢–ê ---
cd /d "%REPO_PATH%"

REM --- –ó–ê–©–ò–¢–ê SPEC –§–ê–ô–õ–ê ---
if not exist "PurchaseGenerator.spec" (
    echo –û–®–ò–ë–ö–ê: PurchaseGenerator.spec –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ PyInstaller
    pause
    exit /b 1
)

REM --- –ü–û–õ–£–ß–ï–ù–ò–ï –í–ï–†–°–ò–ò ---
for /f "tokens=2 delims=^=" %%i in ('findstr "CURRENT_VERSION" main.py') do (
    set VERSION_LINE=%%i
)
set CURRENT_VERSION=!VERSION_LINE:"=!
set CURRENT_VERSION=!CURRENT_VERSION: =!
echo –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: !CURRENT_VERSION!

REM --- –ó–ê–ü–†–û–° –ù–û–í–û–ô –í–ï–†–°–ò–ò ---
echo.
echo –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (—Ç–µ–∫—É—â–∞—è: !CURRENT_VERSION!):
set /p NEW_VERSION=–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:

if "!NEW_VERSION!"=="" (
    echo –í–µ—Ä—Å–∏—è –Ω–µ –≤–≤–µ–¥–µ–Ω–∞!
    pause
    exit /b 1
)

REM --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–ï–†–°–ò–ò ---
echo.
echo –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ —Ñ–∞–π–ª–∞—Ö...
python -c "content = open('main.py', 'r', encoding='utf-8').read(); new_content = content.replace('CURRENT_VERSION = \"!CURRENT_VERSION!\"', 'CURRENT_VERSION = \"!NEW_VERSION!\"'); open('main.py', 'w', encoding='utf-8').write(new_content)"
python -c "content = open('create_installer.iss', 'r', encoding='utf-8').read(); import re; content = re.sub(r'AppVersion=[0-9.]+', 'AppVersion=!NEW_VERSION!', content); content = re.sub(r'VersionInfoVersion=[0-9.]+', 'VersionInfoVersion=!NEW_VERSION!', content); open('create_installer.iss', 'w', encoding='utf-8').write(content)"

REM --- –ö–û–ú–ú–ò–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---
echo.
echo –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π...
git add .
git commit -m "üöÄ Release v!NEW_VERSION!"
git push

REM --- –°–ë–û–†–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
echo.
echo –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
echo –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...
if exist "build" rmdir /s /q "build"
if exist "dist" rmdir /s /q "dist"

echo –ó–∞–ø—É—Å–∫ PyInstaller...
pyinstaller PurchaseGenerator.spec --clean

if not exist "dist\PurchaseGenerator.exe" (
    echo –û–®–ò–ë–ö–ê: –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!
    pause
    exit /b 1
)

echo ‚úì –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ!

REM --- –°–û–ó–î–ê–ù–ò–ï –£–°–¢–ê–ù–û–í–©–ò–ö–ê ---
echo.
echo –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...
set INNO_PATH="C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
if not exist %INNO_PATH% (
    echo –û–®–ò–ë–ö–ê: Inno Setup –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

%INNO_PATH% create_installer.iss

if not exist "Output\PackageGeneratorApp.exe" (
    echo –û–®–ò–ë–ö–ê: –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–µ —Å–æ–∑–¥–∞–Ω!
    pause
    exit /b 1
)

echo ‚úì –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω!

REM --- –°–û–ó–î–ê–ù–ò–ï –†–ï–õ–ò–ó–ê ---
echo.
echo –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub...
gh release create v!NEW_VERSION! "Output\PackageGeneratorApp.exe" --title "v!NEW_VERSION!" --notes "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ v!NEW_VERSION!"

if !errorlevel! equ 0 (
    echo ‚úì –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω –Ω–∞ GitHub!
    echo.
    echo –°—Å—ã–ª–∫–∞: https://github.com/!GITHUB_USER!/!GITHUB_REPO!/releases/tag/v!NEW_VERSION!
) else (
    echo ‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitHub CLI
    echo –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é: https://github.com/!GITHUB_USER!/!GITHUB_REPO!/releases
)

echo.
echo ========================================
echo ‚úÖ –†–ï–õ–ò–ó v!NEW_VERSION! –ó–ê–í–ï–†–®–Å–ù!
echo ========================================
echo.
pause