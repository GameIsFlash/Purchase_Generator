@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

echo.
echo ========================================
echo    –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –†–ï–õ–ò–ó PACKAGEGENERATOR
echo ========================================
echo.

REM --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
set "REPO_PATH=%~dp0"
set "GITHUB_USER=GameIsFlash"
set "GITHUB_REPO=Purchase_Generator"
set "VENV_PATH=%REPO_PATH%.venv"

REM --- –ü–ï–†–ï–•–û–î –í –ü–ê–ü–ö–£ –ü–†–û–ï–ö–¢–ê ---
cd /d "%REPO_PATH%"
echo –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: %CD%

REM --- –ü–†–û–í–ï–†–ö–ê VIRTUAL ENVIRONMENT ---
echo.
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
if exist "%VENV_PATH%\Scripts\activate.bat" (
    echo –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
    call "%VENV_PATH%\Scripts\activate.bat"
    echo ‚úì –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
) else (
    echo ‚ö† –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python
    python --version
)

REM --- –ü–†–û–í–ï–†–ö–ê PYINSTALLER ---
echo.
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ PyInstaller...
pyinstaller --version >nul 2>&1
if !errorlevel! neq 0 (
    echo ‚ùå –û–®–ò–ë–ö–ê: PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyinstaller
    pause
    exit /b 1
)
echo ‚úì PyInstaller –¥–æ—Å—Ç—É–ø–µ–Ω

REM --- –ó–ê–©–ò–¢–ê SPEC –§–ê–ô–õ–ê ---
if not exist "PurchaseGenerator.spec" (
    echo ‚ùå –û–®–ò–ë–ö–ê: PurchaseGenerator.spec –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ PyInstaller
    pause
    exit /b 1
)

REM --- –ü–û–õ–£–ß–ï–ù–ò–ï –í–ï–†–°–ò–ò ---
for /f "tokens=2 delims=^=" %%i in ('findstr "CURRENT_VERSION" main.py') do (
    set VERSION_LINE=%%i
)
set "CURRENT_VERSION=!VERSION_LINE:"=!"
set "CURRENT_VERSION=!CURRENT_VERSION: =!"
echo –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: !CURRENT_VERSION!

REM --- –ó–ê–ü–†–û–° –ù–û–í–û–ô –í–ï–†–°–ò–ò ---
echo.
echo –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (—Ç–µ–∫—É—â–∞—è: !CURRENT_VERSION!):
set /p NEW_VERSION=–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:

if "!NEW_VERSION!"=="" (
    echo ‚ùå –í–µ—Ä—Å–∏—è –Ω–µ –≤–≤–µ–¥–µ–Ω–∞!
    pause
    exit /b 1
)

REM --- –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï ---
echo.
echo –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
echo –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è: !CURRENT_VERSION!
echo –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:  !NEW_VERSION!
set /p CONFIRM=–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n):
if /i not "!CONFIRM!"=="y" (
    echo –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    pause
    exit /b 1
)

REM --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–ï–†–°–ò–ò ---
echo.
echo –®–∞–≥ 1/5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ —Ñ–∞–π–ª–∞—Ö...

echo   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ main.py...
python -c "content = open('main.py', 'r', encoding='utf-8').read(); new_content = content.replace('CURRENT_VERSION = \"!CURRENT_VERSION!\"', 'CURRENT_VERSION = \"!NEW_VERSION!\"'); open('main.py', 'w', encoding='utf-8').write(new_content)"

echo   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ create_installer.iss...
python -c "content = open('create_installer.iss', 'r', encoding='utf-8').read(); import re; content = re.sub(r'AppVersion=[0-9.]+', 'AppVersion=!NEW_VERSION!', content); content = re.sub(r'VersionInfoVersion=[0-9.]+', 'VersionInfoVersion=!NEW_VERSION!', content); open('create_installer.iss', 'w', encoding='utf-8').write(content)"

echo ‚úì –í–µ—Ä—Å–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã

REM --- –ö–û–ú–ú–ò–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---
echo.
echo –®–∞–≥ 2/5: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Git...

git add .
git commit -m "üöÄ Release v!NEW_VERSION!"
git push

if !errorlevel! equ 0 (
    echo ‚úì –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—É—à–µ–Ω—ã –Ω–∞ GitHub
) else (
    echo ‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ –≤ GitHub, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...
)

REM --- –°–ë–û–†–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
echo.
echo –®–∞–≥ 3/5: –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...

echo   –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...
if exist "build" rmdir /s /q "build" 2>nul
if exist "dist" rmdir /s /q "dist" 2>nul

echo   –ó–∞–ø—É—Å–∫ PyInstaller...
pyinstaller PurchaseGenerator.spec --clean

if !errorlevel! neq 0 (
    echo ‚ùå –û–®–ò–ë–ö–ê: –°–±–æ—Ä–∫–∞ PyInstaller –Ω–µ —É–¥–∞–ª–∞—Å—å!
    pause
    exit /b 1
)

if not exist "dist\PurchaseGenerator.exe" (
    echo ‚ùå –û–®–ò–ë–ö–ê: EXE —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω!
    dir dist 2>nul || echo –ü–∞–ø–∫–∞ dist –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    pause
    exit /b 1
)

echo ‚úì –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ: dist\PurchaseGenerator.exe

REM --- –°–û–ó–î–ê–ù–ò–ï –£–°–¢–ê–ù–û–í–©–ò–ö–ê ---
echo.
echo –®–∞–≥ 4/5: –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...

set "INNO_PATH=C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
if not exist "%INNO_PATH%" (
    echo ‚ùå –û–®–ò–ë–ö–ê: Inno Setup –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Inno Setup: https://jrsoftware.org/isdl.php
    pause
    exit /b 1
)

echo   –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...
"%INNO_PATH%" create_installer.iss

if !errorlevel! neq 0 (
    echo ‚ùå –û–®–ò–ë–ö–ê: –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å!
    pause
    exit /b 1
)

if not exist "Output\PackageGeneratorApp.exe" (
    echo ‚ùå –û–®–ò–ë–ö–ê: –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–µ —Å–æ–∑–¥–∞–Ω!
    dir Output 2>nul || echo –ü–∞–ø–∫–∞ Output –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    pause
    exit /b 1
)

echo ‚úì –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω: Output\PackageGeneratorApp.exe

REM --- –°–û–ó–î–ê–ù–ò–ï –†–ï–õ–ò–ó–ê ---
echo.
echo –®–∞–≥ 5/5: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub...

echo   –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI...
gh --version >nul 2>&1
if !errorlevel! neq 0 (
    echo ‚ö† GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
    goto SKIP_RELEASE
)

echo   –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞...
(
echo # Release v!NEW_VERSION!
echo.
echo ## –ß—Ç–æ –Ω–æ–≤–æ–≥–æ
echo - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
echo - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è
echo.
echo ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞
echo 1. –°–∫–∞—á–∞–π—Ç–µ `PackageGeneratorApp.exe`
echo 2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
echo 3. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è
) > release_notes.md

echo   –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞...
gh release create v!NEW_VERSION! "Output\PackageGeneratorApp.exe" --title "v!NEW_VERSION!" --notes-file release_notes.md

if !errorlevel! equ 0 (
    echo ‚úì –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω –Ω–∞ GitHub!
    echo.
    echo üåê –°—Å—ã–ª–∫–∞: https://github.com/!GITHUB_USER!/!GITHUB_REPO!/releases/tag/v!NEW_VERSION!
) else (
    echo ‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitHub CLI
)

del release_notes.md 2>nul

:SKIP_RELEASE

REM --- –ó–ê–í–ï–†–®–ï–ù–ò–ï ---
echo.
echo ========================================
echo ‚úÖ –†–ï–õ–ò–ó v!NEW_VERSION! –ó–ê–í–ï–†–®–Å–ù!
echo ========================================
echo.
echo üìÅ –§–∞–π–ª—ã:
echo    ‚Ä¢ dist\PurchaseGenerator.exe
echo    ‚Ä¢ Output\PackageGeneratorApp.exe
echo.
echo üìã –î–µ–π—Å—Ç–≤–∏—è:
echo    ‚Ä¢ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: !CURRENT_VERSION! ‚Üí !NEW_VERSION!
echo    ‚Ä¢ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub
echo    ‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ
echo    ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω
echo.
pause