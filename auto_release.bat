@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

echo.
echo ========================================
echo    –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –†–ï–õ–ò–ó PACKAGEGENERATOR
echo ========================================
echo.

REM --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
set REPO_PATH=C:\Dev\Purchase_generator_final
set GITHUB_USER=GameIsFlash
set GITHUB_REPO=Purchase_Generator
set /a CURRENT_BUILD=0

REM --- –ß–¢–ï–ù–ò–ï –¢–ï–ö–£–©–ï–ô –í–ï–†–°–ò–ò ---
for /f "tokens=2 delims=^=" %%i in ('findstr "CURRENT_VERSION" main.py') do (
    set CURRENT_VERSION=%%i
    set CURRENT_VERSION=!CURRENT_VERSION: =!
    set CURRENT_VERSION=!CURRENT_VERSION:'=!
    set CURRENT_VERSION=!CURRENT_VERSION:"=!
)

echo –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: !CURRENT_VERSION!
echo.

REM --- –ó–ê–ü–†–û–° –ù–û–í–û–ô –í–ï–†–°–ò–ò ---
set /p VERSION_TYPE="–í—ã–±–µ—Ä–∏ —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (1 - patch, 2 - minor, 3 - major): "

for /f "tokens=1,2,3 delims=." %%a in ("!CURRENT_VERSION!") do (
    set MAJOR=%%a
    set MINOR=%%b
    set PATCH=%%c
)

if "!VERSION_TYPE!"=="1" (
    set /a NEW_PATCH=!PATCH!+1
    set NEW_VERSION=!MAJOR!.!MINOR!.!NEW_PATCH!
) else if "!VERSION_TYPE!"=="2" (
    set /a NEW_MINOR=!MINOR!+1
    set NEW_VERSION=!MAJOR!.!NEW_MINOR!.0
) else if "!VERSION_TYPE!"=="3" (
    set /a NEW_MAJOR=!MAJOR!+1
    set NEW_VERSION=!NEW_MAJOR!.0.0
) else (
    echo –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!
    pause
    exit /b 1
)

set /p CONFIRM="–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±—É–¥–µ—Ç: !NEW_VERSION!. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): "
if /i not "!CONFIRM!"=="y" (
    echo –û—Ç–º–µ–Ω–µ–Ω–æ.
    pause
    exit /b 1
)

echo.
echo üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–ª–∏–∑–∞ v!NEW_VERSION!...
echo.

REM --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–ï–†–°–ò–ò –í –§–ê–ô–õ–ê–• ---
echo –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ —Ñ–∞–π–ª–∞—Ö...

REM –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ main.py
python -c "import re; content = open('main.py', 'r', encoding='utf-8').read(); new_content = re.sub(r'CURRENT_VERSION = \"\d+\.\d+\.\d+\"', 'CURRENT_VERSION = \"!NEW_VERSION!\"', content); open('main.py', 'w', encoding='utf-8').write(new_content)"
if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ main.py
    pause
    exit /b 1
)

REM –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ create_installer.iss
python -c "import re; content = open('create_installer.iss', 'r', encoding='utf-8').read(); content = re.sub(r'AppVersion=\d+\.\d+\.\d+', 'AppVersion=!NEW_VERSION!', content); content = re.sub(r'VersionInfoVersion=\d+\.\d+\.\d+', 'VersionInfoVersion=!NEW_VERSION!', content); open('create_installer.iss', 'w', encoding='utf-8').write(content)"
if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ create_installer.iss
    pause
    exit /b 1
)

REM --- –ö–û–ú–ú–ò–¢ –ò –ü–£–® –ù–ê GITHUB ---
echo –®–∞–≥ 2: –ö–æ–º–º–∏—Ç –∏ –ø—É—à –Ω–∞ GitHub...

git add .
git commit -m "üöÄ Release v!NEW_VERSION!"
git push origin main

if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ –Ω–∞ GitHub
    pause
    exit /b 1
)

REM --- –°–ë–û–†–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
echo –®–∞–≥ 3: –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...

echo –°–±–æ—Ä–∫–∞ EXE —á–µ—Ä–µ–∑ PyInstaller...
pyinstaller PurchaseGenerator.spec
if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ EXE
    pause
    exit /b 1
)

echo –°–±–æ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ —á–µ—Ä–µ–∑ Inno Setup...
"C:\Program Files (x86)\Inno Setup 6\ISCC.exe" create_installer.iss
if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
    pause
    exit /b 1
)

REM --- –ë–ï–°–ü–õ–ê–¢–ù–û–ï –ü–û–î–ü–ò–°–´–í–ê–ù–ò–ï –ß–ï–†–ï–ó SignTool ---
echo –®–∞–≥ 4: –ü–æ–¥–ø–∏—Å—ã–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Windows SDK
set SIGNTOOL_PATH=C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe
if not exist "!SIGNTOOL_PATH!" (
    echo Windows SDK –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–¥–ø–∏—Å—ã–≤–∞–Ω–∏–µ.
    echo –î–ª—è –ø–æ–¥–ø–∏—Å—ã–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏ Windows SDK
) else (
    echo –ü–æ–¥–ø–∏—Å—ã–≤–∞–Ω–∏–µ EXE...
    "!SIGNTOOL_PATH!" sign /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /v "dist\PurchaseGenerator\PurchaseGenerator.exe"

    echo –ü–æ–¥–ø–∏—Å—ã–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...
    "!SIGNTOOL_PATH!" sign /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /v "Output\PackageGeneratorApp_Setup.exe"
)

REM --- –°–û–ó–î–ê–ù–ò–ï –†–ï–õ–ò–ó–ê –ù–ê GITHUB ---
echo –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub...

REM –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
echo Release v!NEW_VERSION! > temp_changelog.md
echo. >> temp_changelog.md
echo –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏: >> temp_changelog.md
echo - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ >> temp_changelog.md
echo - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ >> temp_changelog.md
echo - –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ >> temp_changelog.md

REM –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitHub CLI
gh release create v!NEW_VERSION! "Output\PackageGeneratorApp_Setup.exe" --title "v!NEW_VERSION!" --notes-file temp_changelog.md

if !errorlevel! neq 0 (
    echo –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–ª–∏–∑–∞
    echo –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω GitHub CLI –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω gh auth login
)

REM --- –û–ß–ò–°–¢–ö–ê ---
del temp_changelog.md

echo.
echo ========================================
echo ‚úÖ –†–ï–õ–ò–ó v!NEW_VERSION! –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!
echo ========================================
echo.
echo –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:
echo ‚úì –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å !CURRENT_VERSION! –¥–æ !NEW_VERSION!
echo ‚úì –ö–æ–¥ –∑–∞–ø—É—à–µ–Ω –Ω–∞ GitHub
echo ‚úì EXE —Ñ–∞–π–ª —Å–æ–±—Ä–∞–Ω
echo ‚úì –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω
echo ‚úì –§–∞–π–ª—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã
echo ‚úì –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω –Ω–∞ GitHub
echo.
echo –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ª–∏–∑: https://github.com/!GITHUB_USER!/!GITHUB_REPO!/releases/tag/v!NEW_VERSION!
echo.

pause